Grammar

    0 $accept: program $end

    1 program: statementList

    2 statementList: statement
    3              | statementList statement

    4 statement: funct_def
    5          | SPAWN funct_call ';'
    6          | SYNC ';'
    7          | expr ';'

    8 funct_def: FUNCTION IDENT '(' arglist ')' '{' statementList '}'

    9 arglist: /* empty */
   10        | IDENT
   11        | arglist ',' IDENT

   12 expr: funct_call
   13     | factor

   14 funct_call: IDENT '(' params ')'

   15 params: /* empty */
   16       | expr
   17       | params ',' expr

   18 factor: IDENT
   19       | NUMBER
   20       | STRING


Terminals, with rules where they appear

$end (0) 0
'(' (40) 8 14
')' (41) 8 14
',' (44) 11 17
';' (59) 5 6 7
'{' (123) 8
'}' (125) 8
error (256)
FUNCTION (258) 8
IDENT (259) 8 10 11 14 18
SPAWN (260) 5
STRING (261) 20
NUMBER (262) 19
SYNC (263) 6


Nonterminals, with rules where they appear

$accept (15)
    on left: 0
program (16)
    on left: 1, on right: 0
statementList (17)
    on left: 2 3, on right: 1 3 8
statement (18)
    on left: 4 5 6 7, on right: 2 3
funct_def (19)
    on left: 8, on right: 4
arglist (20)
    on left: 9 10 11, on right: 8 11
expr (21)
    on left: 12 13, on right: 7 16 17
funct_call (22)
    on left: 14, on right: 5 12
params (23)
    on left: 15 16 17, on right: 14 17
factor (24)
    on left: 18 19 20, on right: 13


state 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1
    IDENT     shift, and go to state 2
    SPAWN     shift, and go to state 3
    STRING    shift, and go to state 4
    NUMBER    shift, and go to state 5
    SYNC      shift, and go to state 6

    program        go to state 7
    statementList  go to state 8
    statement      go to state 9
    funct_def      go to state 10
    expr           go to state 11
    funct_call     go to state 12
    factor         go to state 13


state 1

    8 funct_def: FUNCTION . IDENT '(' arglist ')' '{' statementList '}'

    IDENT  shift, and go to state 14


state 2

   14 funct_call: IDENT . '(' params ')'
   18 factor: IDENT .

    '('  shift, and go to state 15

    $default  reduce using rule 18 (factor)


state 3

    5 statement: SPAWN . funct_call ';'

    IDENT  shift, and go to state 16

    funct_call  go to state 17


state 4

   20 factor: STRING .

    $default  reduce using rule 20 (factor)


state 5

   19 factor: NUMBER .

    $default  reduce using rule 19 (factor)


state 6

    6 statement: SYNC . ';'

    ';'  shift, and go to state 18


state 7

    0 $accept: program . $end

    $end  shift, and go to state 19


state 8

    1 program: statementList .
    3 statementList: statementList . statement

    FUNCTION  shift, and go to state 1
    IDENT     shift, and go to state 2
    SPAWN     shift, and go to state 3
    STRING    shift, and go to state 4
    NUMBER    shift, and go to state 5
    SYNC      shift, and go to state 6

    $default  reduce using rule 1 (program)

    statement   go to state 20
    funct_def   go to state 10
    expr        go to state 11
    funct_call  go to state 12
    factor      go to state 13


state 9

    2 statementList: statement .

    $default  reduce using rule 2 (statementList)


state 10

    4 statement: funct_def .

    $default  reduce using rule 4 (statement)


state 11

    7 statement: expr . ';'

    ';'  shift, and go to state 21


state 12

   12 expr: funct_call .

    $default  reduce using rule 12 (expr)


state 13

   13 expr: factor .

    $default  reduce using rule 13 (expr)


state 14

    8 funct_def: FUNCTION IDENT . '(' arglist ')' '{' statementList '}'

    '('  shift, and go to state 22


state 15

   14 funct_call: IDENT '(' . params ')'

    IDENT   shift, and go to state 2
    STRING  shift, and go to state 4
    NUMBER  shift, and go to state 5

    $default  reduce using rule 15 (params)

    expr        go to state 23
    funct_call  go to state 12
    params      go to state 24
    factor      go to state 13


state 16

   14 funct_call: IDENT . '(' params ')'

    '('  shift, and go to state 15


state 17

    5 statement: SPAWN funct_call . ';'

    ';'  shift, and go to state 25


state 18

    6 statement: SYNC ';' .

    $default  reduce using rule 6 (statement)


state 19

    0 $accept: program $end .

    $default  accept


state 20

    3 statementList: statementList statement .

    $default  reduce using rule 3 (statementList)


state 21

    7 statement: expr ';' .

    $default  reduce using rule 7 (statement)


state 22

    8 funct_def: FUNCTION IDENT '(' . arglist ')' '{' statementList '}'

    IDENT  shift, and go to state 26

    $default  reduce using rule 9 (arglist)

    arglist  go to state 27


state 23

   16 params: expr .

    $default  reduce using rule 16 (params)


state 24

   14 funct_call: IDENT '(' params . ')'
   17 params: params . ',' expr

    ')'  shift, and go to state 28
    ','  shift, and go to state 29


state 25

    5 statement: SPAWN funct_call ';' .

    $default  reduce using rule 5 (statement)


state 26

   10 arglist: IDENT .

    $default  reduce using rule 10 (arglist)


state 27

    8 funct_def: FUNCTION IDENT '(' arglist . ')' '{' statementList '}'
   11 arglist: arglist . ',' IDENT

    ')'  shift, and go to state 30
    ','  shift, and go to state 31


state 28

   14 funct_call: IDENT '(' params ')' .

    $default  reduce using rule 14 (funct_call)


state 29

   17 params: params ',' . expr

    IDENT   shift, and go to state 2
    STRING  shift, and go to state 4
    NUMBER  shift, and go to state 5

    expr        go to state 32
    funct_call  go to state 12
    factor      go to state 13


state 30

    8 funct_def: FUNCTION IDENT '(' arglist ')' . '{' statementList '}'

    '{'  shift, and go to state 33


state 31

   11 arglist: arglist ',' . IDENT

    IDENT  shift, and go to state 34


state 32

   17 params: params ',' expr .

    $default  reduce using rule 17 (params)


state 33

    8 funct_def: FUNCTION IDENT '(' arglist ')' '{' . statementList '}'

    FUNCTION  shift, and go to state 1
    IDENT     shift, and go to state 2
    SPAWN     shift, and go to state 3
    STRING    shift, and go to state 4
    NUMBER    shift, and go to state 5
    SYNC      shift, and go to state 6

    statementList  go to state 35
    statement      go to state 9
    funct_def      go to state 10
    expr           go to state 11
    funct_call     go to state 12
    factor         go to state 13


state 34

   11 arglist: arglist ',' IDENT .

    $default  reduce using rule 11 (arglist)


state 35

    3 statementList: statementList . statement
    8 funct_def: FUNCTION IDENT '(' arglist ')' '{' statementList . '}'

    FUNCTION  shift, and go to state 1
    IDENT     shift, and go to state 2
    SPAWN     shift, and go to state 3
    STRING    shift, and go to state 4
    NUMBER    shift, and go to state 5
    SYNC      shift, and go to state 6
    '}'       shift, and go to state 36

    statement   go to state 20
    funct_def   go to state 10
    expr        go to state 11
    funct_call  go to state 12
    factor      go to state 13


state 36

    8 funct_def: FUNCTION IDENT '(' arglist ')' '{' statementList '}' .

    $default  reduce using rule 8 (funct_def)
