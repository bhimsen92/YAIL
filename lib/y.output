Terminals unused in grammar

   FUNCTION


Grammar

    0 $accept: program $end

    1 program: statementList

    2 statementList: empty
    3              | statementList statement

    4 statement: variableDefinition ';'

    5 $@1: /* empty */

    6 variableDefinition: type $@1 variableList

    7 variableList: variableDeclarations
    8             | variableList ',' variableDeclarations

    9 variableDeclarations: IDENTIFIER '=' expression

   10 expression: atom

   11 atom: IDENTIFIER
   12     | INTEGER
   13     | DOUBLE
   14     | STRING
   15     | NOTHING
   16     | EMPTY
   17     | '(' expression ')'

   18 empty: /* empty */

   19 type: INTEGER_T
   20     | DOUBLE_T
   21     | STRING_T


Terminals, with rules where they appear

$end (0) 0
'(' (40) 17
')' (41) 17
',' (44) 8
';' (59) 4
'=' (61) 9
error (256)
FUNCTION (258)
NOTHING (259) 15
EMPTY (260) 16
INTEGER_T (261) 19
DOUBLE_T (262) 20
STRING_T (263) 21
IDENTIFIER (264) 9 11
STRING (265) 14
INTEGER (266) 12
DOUBLE (267) 13


Nonterminals, with rules where they appear

$accept (18)
    on left: 0
program (19)
    on left: 1, on right: 0
statementList (20)
    on left: 2 3, on right: 1 3
statement (21)
    on left: 4, on right: 3
variableDefinition (22)
    on left: 6, on right: 4
$@1 (23)
    on left: 5, on right: 6
variableList (24)
    on left: 7 8, on right: 6 8
variableDeclarations (25)
    on left: 9, on right: 7 8
expression (26)
    on left: 10, on right: 9 17
atom (27)
    on left: 11 12 13 14 15 16 17, on right: 10
empty (28)
    on left: 18, on right: 2
type (29)
    on left: 19 20 21, on right: 6


state 0

    0 $accept: . program $end

    $default  reduce using rule 18 (empty)

    program        go to state 1
    statementList  go to state 2
    empty          go to state 3


state 1

    0 $accept: program . $end

    $end  shift, and go to state 4


state 2

    1 program: statementList .
    3 statementList: statementList . statement

    INTEGER_T  shift, and go to state 5
    DOUBLE_T   shift, and go to state 6
    STRING_T   shift, and go to state 7

    $default  reduce using rule 1 (program)

    statement           go to state 8
    variableDefinition  go to state 9
    type                go to state 10


state 3

    2 statementList: empty .

    $default  reduce using rule 2 (statementList)


state 4

    0 $accept: program $end .

    $default  accept


state 5

   19 type: INTEGER_T .

    $default  reduce using rule 19 (type)


state 6

   20 type: DOUBLE_T .

    $default  reduce using rule 20 (type)


state 7

   21 type: STRING_T .

    $default  reduce using rule 21 (type)


state 8

    3 statementList: statementList statement .

    $default  reduce using rule 3 (statementList)


state 9

    4 statement: variableDefinition . ';'

    ';'  shift, and go to state 11


state 10

    6 variableDefinition: type . $@1 variableList

    $default  reduce using rule 5 ($@1)

    $@1  go to state 12


state 11

    4 statement: variableDefinition ';' .

    $default  reduce using rule 4 (statement)


state 12

    6 variableDefinition: type $@1 . variableList

    IDENTIFIER  shift, and go to state 13

    variableList          go to state 14
    variableDeclarations  go to state 15


state 13

    9 variableDeclarations: IDENTIFIER . '=' expression

    '='  shift, and go to state 16


state 14

    6 variableDefinition: type $@1 variableList .
    8 variableList: variableList . ',' variableDeclarations

    ','  shift, and go to state 17

    $default  reduce using rule 6 (variableDefinition)


state 15

    7 variableList: variableDeclarations .

    $default  reduce using rule 7 (variableList)


state 16

    9 variableDeclarations: IDENTIFIER '=' . expression

    NOTHING     shift, and go to state 18
    EMPTY       shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    STRING      shift, and go to state 21
    INTEGER     shift, and go to state 22
    DOUBLE      shift, and go to state 23
    '('         shift, and go to state 24

    expression  go to state 25
    atom        go to state 26


state 17

    8 variableList: variableList ',' . variableDeclarations

    IDENTIFIER  shift, and go to state 13

    variableDeclarations  go to state 27


state 18

   15 atom: NOTHING .

    $default  reduce using rule 15 (atom)


state 19

   16 atom: EMPTY .

    $default  reduce using rule 16 (atom)


state 20

   11 atom: IDENTIFIER .

    $default  reduce using rule 11 (atom)


state 21

   14 atom: STRING .

    $default  reduce using rule 14 (atom)


state 22

   12 atom: INTEGER .

    $default  reduce using rule 12 (atom)


state 23

   13 atom: DOUBLE .

    $default  reduce using rule 13 (atom)


state 24

   17 atom: '(' . expression ')'

    NOTHING     shift, and go to state 18
    EMPTY       shift, and go to state 19
    IDENTIFIER  shift, and go to state 20
    STRING      shift, and go to state 21
    INTEGER     shift, and go to state 22
    DOUBLE      shift, and go to state 23
    '('         shift, and go to state 24

    expression  go to state 28
    atom        go to state 26


state 25

    9 variableDeclarations: IDENTIFIER '=' expression .

    $default  reduce using rule 9 (variableDeclarations)


state 26

   10 expression: atom .

    $default  reduce using rule 10 (expression)


state 27

    8 variableList: variableList ',' variableDeclarations .

    $default  reduce using rule 8 (variableList)


state 28

   17 atom: '(' expression . ')'

    ')'  shift, and go to state 29


state 29

   17 atom: '(' expression ')' .

    $default  reduce using rule 17 (atom)
